(defsrc
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rmet menu rctl
)

(deflayer base
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc 
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \ 
  lctl a    s    d    f    g    h    j    k    l    ;    '    ret 
  lsft z    x    c    v    b    @num m    ,    .    /    rsft 
  lctl lmet lalt           @spfn          ralt rmet menu rctl
)

(deflayer spacefnlayer
  _    f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12  bspc 
  _    _    del  esc  bspc tab  ins  pgup up   pgdn @prt @lwd @rwd del 
  _    _    _    _    _    grv  home left down rght end  @wrd _  
  _    _    _    _    _    brk  spc  mute vold volu menu _   
  _    _    _              _              _    caps slck _   
)

(deflayer numpadlayer
  _    _    _    _    _    _    _    kp7  kp8  kp9  kp0  kp-  _    _   
  _    _    _    _    _    _    _    kp4  kp5  kp6  kp+  _    _    _ 
  _    _    _    _    _    _    _    kp1  kp2  kp3  kp*  _    _  
  _    _    _    _    _    _    _    kp0  _    _    kp/  _   
  _    _    _              _              _    _    _    _   
)

(defvar
  tap-timeout   160
  hold-timeout  160
  tt            $tap-timeout
  ht            $hold-timeout
)

(defalias
  spacefn       (layer-while-held spacefnlayer)
  numpad        (layer-while-held numpadlayer)
  spfn          (tap-hold $tt $ht spc @spacefn)
  num           (tap-hold $tt $ht n   @numpad)
)

(defalias
  cpy           C-ins
  pst           S-ins
  lwd           M-C-left
  rwd           M-C-rght
  wrd           (macro C-left C-S-rght)
  snt           (macro home S-end)
  prt           M-S-s
)